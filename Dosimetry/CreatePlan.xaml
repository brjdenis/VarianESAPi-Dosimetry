<Window x:Class="Dosimetry.CreatePlan"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Dosimetry"
             mc:Ignorable="d" Title="Create ExternalPlanSetup" 
             Height="450" Width="800" WindowStartupLocation="CenterScreen" Background="Violet">
    <Window.Resources>
        <Style x:Key="ComboBoxDropdownStyle" TargetType="ComboBox">
            <Setter Property="IsDropDownOpen" Value="True" />
        </Style>
        <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="10,0,10,0" />
        </Style>
        <Style x:Key="ColumnElementStyle2" TargetType="TextBlock">
            
            <Setter Property="TextAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type Button}"/>
        <Style TargetType="{x:Type Label}"/>
        <Style TargetType="{x:Type Border}"/>
        <Style TargetType="{x:Type CheckBox}"/>
        <Style TargetType="{x:Type DataGrid}"/>
        <Style TargetType="{x:Type ListView}"/>
        <Style TargetType="{x:Type ListViewItem}"/>
        <Style TargetType="{x:Type ToolTip}"/>
        <Style TargetType="{x:Type TextBlock}"/>
        <Style TargetType="{x:Type StackPanel}"/>
        <Style TargetType="{x:Type GroupBox}"/>
        <Style TargetType="{x:Type ScrollBar}"/>
        <Style TargetType="{x:Type TabControl}"/>
        <Style TargetType="{x:Type TabItem}"/>
        <Style TargetType="{x:Type TextBox}"/>
    </Window.Resources>
    <Grid>
        <TabControl TabStripPlacement="Top" Margin="0,0,0,0" Background="{DynamicResource {x:Static SystemColors.InactiveBorderBrushKey}}" MaxWidth="{Binding RelativeSource={RelativeSource AncestorType={x:Type Grid}}, Path=ActualWidth}">
            <TabItem Header="Structure Set" Height="30" Width="80">
                <Grid Margin="10,10,10,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="360"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <GroupBox Grid.Column="0" Grid.Row="0" Padding="5">
                        <GroupBox.Header>
                            <CheckBox x:Name="CheckBoxStructureSetDuplicate" Content="Duplicate StructureSet" IsChecked="False" Checked="CheckBoxStructureSetDuplicateChanged" Unchecked="CheckBoxStructureSetDuplicateChanged"/>
                        </GroupBox.Header>

                        <Grid VerticalAlignment="Stretch" Height="Auto" Width="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />

                            </Grid.RowDefinitions>
                            <Label Content="Define new StrSet name:" Grid.Column="0" Grid.Row="1"></Label>
                            <Grid Grid.Column="0" Grid.Row="2" VerticalAlignment="Stretch" Height="Auto" Width="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Grid.Column="3" Grid.Row="0" Width="140" HorizontalAlignment="Left" VerticalAlignment="Center" Height="30" VerticalContentAlignment="Center">
                                    <TextBlock x:Name="TextBoxStructureSetCurrent"   Text="" Width="130" />
                                </Label>
                                <Label x:Name="LabelStructureSetArrow" Grid.Column="2" Grid.Row="0" Content=">-" FontWeight="Bold" FontSize="14" Width="25" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                                <TextBox x:Name="TextBoxStructureSetNew" Grid.Column="1" Grid.Row="0" Width="150" Height="30" MaxLength="16"  TextChanged="StructureSetLabelNewTextChanged" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                                <Label x:Name="LabelStructureSetNewSuccess" Grid.Column="0" Grid.Row="0" Width="30" Height="30" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                            </Grid>
                            <CheckBox x:Name="CheckBoxRemoveEmptyStructures" Grid.Column="0" Grid.Row="3" Margin="0,10,0,0" Content="Delete empty structures"></CheckBox>

                            <CheckBox x:Name="CheckBoxAddVirtualBolus" Grid.Column="0" Grid.Row="4" Margin="0,10,0,0" Content="Add 5mm virtual bolus over:" Checked="CheckBoxAddVirtualBolusChanged" Unchecked="CheckBoxAddVirtualBolusChanged"></CheckBox>
                            <ListView x:Name="ListViewVirtBolus"  Margin="10,10,0,0" Grid.Column="0"  Grid.Row="5"  Height="100" Width="200" HorizontalAlignment="Left" SelectionMode="Extended"/>
                        </Grid>
                    </GroupBox>

                    <Grid Grid.Column="1" Grid.Row="0" VerticalAlignment="Stretch" Height="Auto" Width="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="200" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <GroupBox Padding="5" Grid.Row="0" Grid.Column="0" >
                            <GroupBox.Header>
                                <CheckBox x:Name="CheckBoxAddTransitionStructures" Content="Create transitional volumes" IsChecked="False" Checked="CheckBoxAddTransitionStructuresChanged" Unchecked="CheckBoxAddTransitionStructuresChanged"/>
                            </GroupBox.Header>

                            <Grid Margin="10,10,10,10" VerticalAlignment="Stretch" Height="Auto" Width="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                
                                <DataGrid Grid.Column="0" Grid.Row="0" x:Name="DataGrid1" IsReadOnly="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="False" HorizontalAlignment="Stretch" MaxHeight="150"  VerticalAlignment="Top" Width="Auto" AutoGenerateColumns="False" Grid.ColumnSpan="2" SourceUpdated="DataGrid1_SourceUpdated">
                                    <DataGrid.Columns>
                                        
                                        <DataGridTextColumn x:Name="PTV1" Width="43*" Header="Target1" IsReadOnly="True" Binding="{Binding Target1, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="DataGridCell">
                                                    <Setter Property="ToolTip" Value="{Binding Target1}" />
                                                    <Setter Property="ToolTipService.ShowDuration" Value="1000000"></Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Foreground" Value="Black"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn x:Name="PTV2" Width="43*" Header="Target2" IsReadOnly="True" Binding="{Binding Target2, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="DataGridCell">
                                                    <Setter Property="ToolTip" Value="{Binding Target2}" />
                                                    <Setter Property="ToolTipService.ShowDuration" Value="1000000"></Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Foreground" Value="Black"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Margin" Width="14*" Binding="{Binding Margin, Mode=TwoWay, NotifyOnSourceUpdated=True}" ElementStyle="{StaticResource ColumnElementStyle}"/>

                                    </DataGrid.Columns>
                                    <DataGrid.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.CellStyle>
                                </DataGrid>
                            </Grid>
                        </GroupBox>

                        <GroupBox Padding="5" Grid.Row="1" Grid.Column="0" Header="Other">
                            <Grid VerticalAlignment="Stretch" Height="Auto" Width="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <CheckBox x:Name="CheckBoxConvertHighRes" Grid.Column="0" Grid.Row="0" Margin="0,10,0,0" Content="Allow conversion into HighResolutionSegment" IsChecked="False" IsEnabled="False"></CheckBox>
                                <Label x:Name="LabelConvertHighRes" Grid.Column="0" Grid.Row="1" Margin="15,0,0,0" Content=""></Label>
                            </Grid>
                            
                        </GroupBox>
                    </Grid>
                    


                </Grid>
            </TabItem>

            <TabItem Header="Plan" Height="30" Width="75">
                <Grid Margin="10,10,10,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="0.5*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    
                    <GroupBox Grid.Column="0" Grid.Row="0" Padding="5">
                        <GroupBox.Header>
                            <CheckBox x:Name="CheckBoxPlan" Content="Create new plan" IsChecked="False" Checked="CheckBoxPlanChanged" Unchecked="CheckBoxPlanChanged"/>
                        </GroupBox.Header>

                        <Grid VerticalAlignment="Stretch" Height="Auto" Width="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="50" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Label Content="Define plan name:" FontWeight="Medium" Grid.Column="0" Grid.Row="0"></Label>
                            <Grid Grid.Column="0" Grid.Row="1" VerticalAlignment="Stretch" Height="Auto" Width="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Content="Course:"  Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" HorizontalContentAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                                <ComboBox x:Name="ComboBoxCourse" Grid.Column="1" Grid.Row="0" Width="60" Height="30" HorizontalAlignment="Center" HorizontalContentAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" SelectionChanged="ComboBoxCourseSelectionChanged"/>
                                <Label Grid.Column="2" Grid.Row="0" Content="\" Width="20" Height="30" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                                <TextBox x:Name="TextBoxPlanName"  Grid.Column="3" Grid.Row="0" Width="130" Height="30" HorizontalAlignment="Center" HorizontalContentAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" TextChanged="PlanNameOnChange"/>
                                <Label x:Name="LabelPlanName" Grid.Column="4" Grid.Row="0" Width="30" Height="30" HorizontalAlignment="Center" HorizontalContentAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                            </Grid>

                            <Label Margin="0,10,0,0" FontWeight="Medium" Content="Dose prescription:" Grid.Column="0" Grid.Row="2"/>
                            <DataGrid Grid.Column="0" Grid.Row="3" x:Name="DataGridPrescription" IsReadOnly="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserSortColumns="False" HorizontalAlignment="Stretch"  VerticalAlignment="Top" Width="Auto" AutoGenerateColumns="False" SourceUpdated="PrescriptionSourceUpdate">
                                <DataGrid.Columns>
                                    <DataGridTextColumn x:Name="DataGridNumberOfFractions" Width="20*" Header="Fractions" IsReadOnly="False" ElementStyle="{StaticResource ColumnElementStyle2}" Binding="{Binding NumFractions, Mode=TwoWay, NotifyOnSourceUpdated=True}">
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <EventSetter Event="TextChanged" Handler="PrescriptionTextChanged1" />
                                                <Setter Property="TextAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>

                                    </DataGridTextColumn>
                                    <DataGridTextColumn x:Name="DataGridDosePerFraction" Width="40*" Header="Dose per fraction [cGy]" IsReadOnly="False" ElementStyle="{StaticResource ColumnElementStyle2}" Binding="{Binding DosePerFraction, Mode=TwoWay, NotifyOnSourceUpdated=True}">
                                        <DataGridTextColumn.EditingElementStyle>
                                            <Style TargetType="TextBox">
                                                <EventSetter Event="TextChanged" Handler="PrescriptionTextChanged2" />
                                                <Setter Property="TextAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.EditingElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn x:Name="DataGridTotalDose" Width="40*" Header="Total dose [cGy]" IsReadOnly="True" ElementStyle="{StaticResource ColumnElementStyle2}" Binding="{Binding TotalDose, Mode=TwoWay, NotifyOnSourceUpdated=True}">
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Label Margin="0,10,0,0" FontWeight="Medium" Content="Beam type:" Grid.Column="0" Grid.Row="4" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom"/>
                            <Grid Grid.Column="0" Grid.Row="5" HorizontalAlignment="Stretch" Height="Auto" Width="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Content="Machine:"  Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" HorizontalContentAlignment="Left" VerticalAlignment="Stretch" VerticalContentAlignment="Center"/>
                                <ComboBox x:Name="ComboBoxMachine" Grid.Column="0" Grid.Row="1" Margin="5,0,5,0" Height="30" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" SelectionChanged="ComboBoxMachineSelectionChanged"/>
                                <Label Content="Energy:"  Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" HorizontalContentAlignment="Left" VerticalAlignment="Stretch" VerticalContentAlignment="Center"/>
                                <ComboBox x:Name="ComboBoxEnergy" Grid.Column="1" Grid.Row="1" Margin="5,0,5,0" Height="30" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" SelectionChanged="ComboBoxEnergySelectionChanged"/>
                                <Label Grid.Row="0" Grid.Column="2" Content="Type:" HorizontalAlignment="Center" HorizontalContentAlignment="Left" VerticalAlignment="Stretch" VerticalContentAlignment="Center"/>
                                <ComboBox x:Name="ComboBoxTechnique" Grid.Column="2" Grid.Row="1" Margin="5,0,5,0" Height="30" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" SelectionChanged="ComboBoxTechniqueSelectionChanged"/>
                            </Grid>

                            <Label Margin="0,0,0,0" FontWeight="Medium" Content="Algorithms:" Grid.Column="0" Grid.Row="6" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom"/>
                            <Grid Grid.Column="0" Grid.Row="7" VerticalAlignment="Stretch" Height="Auto" Width="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Content="Dose:"  Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" HorizontalContentAlignment="Left" VerticalAlignment="Stretch" VerticalContentAlignment="Center"/>
                                <ComboBox x:Name="ComboBoxAlgorithmDose" Grid.Column="0" Grid.Row="1" Margin="5,0,5,0" Height="30" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                                <Label Content="Optimization:"  Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" HorizontalContentAlignment="Left" VerticalAlignment="Stretch" VerticalContentAlignment="Center"/>
                                <ComboBox x:Name="ComboBoxAlgorithmOpt" Grid.Column="1" Grid.Row="1" Margin="5,0,5,0" Height="30" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                                <Label Content="Portal Dose:" Grid.Row="0" Grid.Column="2"  HorizontalAlignment="Center" HorizontalContentAlignment="Left" VerticalAlignment="Stretch" VerticalContentAlignment="Center"/>
                                <ComboBox x:Name="ComboBoxAlgorithmPD" Grid.Column="2" Grid.Row="1" Margin="5,0,5,0" Height="30" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" IsEnabled="False"/>
                            </Grid>
                        </Grid>
                    </GroupBox>
                    <GroupBox Grid.Column="1" Grid.Row="0" Padding="5" Header="">
                        <Grid VerticalAlignment="Top" Height="Auto" Width="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <CheckBox x:Name="CheckBoxAddOptimizationObjectives" Grid.Column="0" Grid.Row="0" Content="Add optimization objectives to plan" IsChecked="True"></CheckBox>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>

            <TabItem Header="Create" Height="30" Width="90">
                <Grid Margin="10,10,10,10" VerticalAlignment="Stretch" Height="Auto" Width="Auto">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Button x:Name="CreateButton" Grid.Row="0" Grid.Column="0" Margin="10,10,0,0" Content="Create" Width="100" Height="30" Click="Button_Click" HorizontalAlignment="Left" VerticalAlignment="Top"/>

                    <Border Margin="10,10,0,0" Grid.Column="0" Width="400" Height="300" Grid.Row="1" BorderThickness="1" BorderBrush="Gray" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <TextBox x:Name="CreateTextBlock" IsReadOnly="True" TextWrapping="Wrap" Width="Auto" Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Top" Background="Transparent"  BorderThickness="0"/>
                    </Border>
                </Grid>
                
            </TabItem>
        </TabControl>
    </Grid>
</Window>
